import java.util.*;
import java.util.stream.*;

class Product {
    String name;
    String category;
    double price;

    Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " - " + category + " - " + price;
    }
}

public class ProductStreamOps {
    public static void main(String[] args) {
        List<Product> products = Arrays.asList(
                new Product("Laptop", "Electronics", 80000),
                new Product("Phone", "Electronics", 60000),
                new Product("Shirt", "Clothing", 2000),
                new Product("Jeans", "Clothing", 3500),
                new Product("TV", "Electronics", 45000)
        );

        // 1. Filter products by category
        System.out.println("Electronics Products:");
        products.stream()
                .filter(p -> p.category.equals("Electronics"))
                .forEach(System.out::println);

        // 2. Sort by price
        System.out.println("\nProducts sorted by price:");
        products.stream()
                .sorted(Comparator.comparingDouble(p -> p.price))
                .forEach(System.out::println);

        // 3. Average price
        double avgPrice = products.stream()
                .mapToDouble(p -> p.price)
                .average()
                .orElse(0.0);
        System.out.println("\nAverage Price: " + avgPrice);

        // 4. Get product names
        System.out.println("\nProduct Names:");
        List<String> names = products.stream()
                .map(p -> p.name)
                .collect(Collectors.toList());
        names.forEach(System.out::println);
    }
}
